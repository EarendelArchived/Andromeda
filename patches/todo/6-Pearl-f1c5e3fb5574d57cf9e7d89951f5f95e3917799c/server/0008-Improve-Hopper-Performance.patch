From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 3 Mar 2022 14:49:54 +0700
Subject: [PATCH] Improve Hopper Performance

Original code by starlis
You can find the original code on https://github.com/starlis/empirecraft

diff --git a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
index fa612a4f4abc5185c9142af31f5d7f6e92549350..20f14011a9e899ac5ee553650b5ac3f41b056a20 100644
--- a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
@@ -37,6 +37,10 @@ import org.bukkit.event.entity.EntityPickupItemEvent;
 import org.bukkit.event.player.PlayerPickupItemEvent;
 // CraftBukkit end
 import org.bukkit.event.player.PlayerAttemptPickupItemEvent; // Paper
+// EMC start
+import net.minecraft.world.entity.vehicle.MinecartHopper;
+import net.minecraft.world.phys.AABB;
+// EMC end
 
 public class ItemEntity extends Entity {
 
@@ -194,10 +198,22 @@ public class ItemEntity extends Entity {
                 // CraftBukkit end
                 this.discard();
             }
-
+            markHopperCarts(); // EMC
         }
     }
 
+    // EMC start
+    private void markHopperCarts() {
+        if (this.isAlive() && this.onGround && this.age < 20 * 60 && this.age % 20 == 0) {
+            AABB aabb = this.getBoundingBox().inflate(32, 4, 32);
+            for (Entity entity : this.level.getEntities(this, aabb)) {
+                if (entity instanceof MinecartHopper) {
+                    ((MinecartHopper) entity).pickupImmunity = MinecraftServer.currentTick + 200;
+                }
+            }
+        }
+    }
+    // EMC end
     // Spigot start - copied from above
     @Override
     public void inactiveTick() {
@@ -218,6 +234,7 @@ public class ItemEntity extends Entity {
             // CraftBukkit end
             this.discard();
         }
+        markHopperCarts(); // EMC
     }
     // Spigot end
 
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
index 540c23f6297c34cf8e7bf8312ceaa5fc868f414c..3665e0e39e201555a9bc33e30faa970d23716037 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
@@ -22,6 +22,7 @@ public class MinecartHopper extends AbstractMinecartContainer implements Hopper
     private boolean enabled = true;
     private int cooldownTime = -1;
     private final BlockPos lastPosition = BlockPos.ZERO;
+    public int pickupImmunity = 0; // EMC
 
     public MinecartHopper(EntityType<? extends MinecartHopper> type, Level world) {
         super(type, world);
@@ -149,4 +150,12 @@ public class MinecartHopper extends AbstractMinecartContainer implements Hopper
     public AbstractContainerMenu createMenu(int syncId, Inventory playerInventory) {
         return new HopperMenu(syncId, playerInventory, this);
     }
+
+    // EMC start
+    private long tickAttempts = 0;
+    @Override
+    public long getAndIncrementAttemptCounter() {
+        return tickAttempts++;
+    }
+    // EMC stop
 }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/Hopper.java b/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
index 6a1405a8630e90db3b5a3c9152259ba6f5f0c784..4f01c72ee3c2191ec76d975eb936cb670cd9e058 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
@@ -16,6 +16,8 @@ public interface Hopper extends Container {
 
     default net.minecraft.core.BlockPos getBlockPosition() { return new net.minecraft.core.BlockPos(getLevelX(), getLevelY(), getLevelZ()); } // Paper
 
+    long getAndIncrementAttemptCounter(); // EMC
+
     double getLevelX();
 
     double getLevelY();
diff --git a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index 698a0ac71cf9fb409d609a81cc2958121260a46d..1b4482053d81f9dfa7415a5865a5ca9643ea5817 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -141,6 +141,22 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         return ContainerHelper.removeItem(this.getItems(), slot, amount);
     }
 
+    // EMC start
+    private long tickAttempts = 0;
+    @Override
+    public long getAndIncrementAttemptCounter() {
+        return tickAttempts++;
+    }
+
+    private static boolean shouldSuckin(Hopper hopper) {
+        if (hopper instanceof MinecartHopper && ((MinecartHopper) hopper).pickupImmunity > net.minecraft.server.MinecraftServer.currentTick) {
+            return true;
+        }
+        final int hopperId = (int) hopper.getLevelX() + (int) hopper.getLevelY() + (int) hopper.getLevelZ();
+        return (hopper.getAndIncrementAttemptCounter() + hopperId) % 20 == 0;
+    }
+    // EMC end
+
     @Override
     public void setItem(int slot, ItemStack stack) {
         this.unpackLootTable((Player) null);
@@ -495,7 +511,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
                 }
                 // Paper end
             });
-        } else {
+        } else if (shouldSuckin(hopper)) { // EMC
             Iterator iterator = HopperBlockEntity.getItemsAtAndAbove(world, hopper).iterator();
 
             ItemEntity entityitem;
@@ -510,6 +526,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
 
             return true;
         }
+        return false; // EMC
     }
 
     // Paper - method unused as logic is inlined above
