From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Fri, 10 Jun 2022 01:30:45 +0200
Subject: [PATCH] Hide plugins


diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index a55acc7b338f34bd7d8443ada50d25e4f9414967..011a9944aadb759697a289a7178dcea8659f772d 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -123,6 +123,12 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
     String getMinecraftVersion();
     // Paper end
 
+    // Suki start - hide plugins
+    public boolean getHidePluginsIfNoPermission();
+
+    public boolean getShowLegacyPluginAsterisk();
+    // Suki end - hide plugins
+
     /**
      * Gets a view of all currently logged in players. This {@linkplain
      * Collections#unmodifiableCollection(Collection) view} is a reused
diff --git a/src/main/java/org/bukkit/command/defaults/PluginsCommand.java b/src/main/java/org/bukkit/command/defaults/PluginsCommand.java
index 1aa58c59e1e8738bbdc77752885ff3b18b29de42..2be0fa60b70571b61c13193f3034c71ac889e662 100644
--- a/src/main/java/org/bukkit/command/defaults/PluginsCommand.java
+++ b/src/main/java/org/bukkit/command/defaults/PluginsCommand.java
@@ -25,7 +25,7 @@ public class PluginsCommand extends BukkitCommand {
     public boolean execute(@NotNull CommandSender sender, @NotNull String currentAlias, @NotNull String[] args) {
         if (!testPermission(sender)) return true;
 
-        sender.sendMessage("Plugins " + getPluginList());
+        sender.sendMessage("Plugins " + getPluginList(sender)); // Suki - hide plugins
         return true;
     }
 
@@ -36,7 +36,7 @@ public class PluginsCommand extends BukkitCommand {
     }
 
     @NotNull
-    private String getPluginList() {
+    private String getPluginList(@NotNull CommandSender sender) { // Suki - hide plugins
         // Paper start
         TreeMap<String, Plugin> plugins = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);
 
@@ -45,7 +45,14 @@ public class PluginsCommand extends BukkitCommand {
         }
 
         StringBuilder pluginList = new StringBuilder();
+        int numberOfListedPlugins = 0; // Suki - hide plugins
         for (Map.Entry<String, Plugin> entry : plugins.entrySet()) {
+            // Suki start - hide plugins
+            if (!entry.getValue().canBeSeenBy(sender)) {
+                continue;
+            }
+            numberOfListedPlugins++;
+            // Suki end - hide plugins
             if (pluginList.length() > 0) {
                 pluginList.append(ChatColor.WHITE);
                 pluginList.append(", ");
@@ -56,7 +63,7 @@ public class PluginsCommand extends BukkitCommand {
             pluginList.append(plugin.isEnabled() ? ChatColor.GREEN : ChatColor.RED);
             // Paper start - Add an asterisk to legacy plugins (so admins are aware)
             String pluginName = plugin.getDescription().getName();
-            if (org.bukkit.UnsafeValues.isLegacyPlugin(plugin)) {
+            if (Bukkit.getServer().getShowLegacyPluginAsterisk() && org.bukkit.UnsafeValues.isLegacyPlugin(plugin)) { // Suki - hide plugins
                 pluginName += "*";
             }
             pluginList.append(pluginName);
@@ -67,7 +74,7 @@ public class PluginsCommand extends BukkitCommand {
             }
         }
 
-        return "(" + plugins.size() + "): " + pluginList.toString();
+        return "(" + numberOfListedPlugins + "): " + pluginList.toString(); // Suki - hide plugins
         // Paper end
     }
 
diff --git a/src/main/java/org/bukkit/command/defaults/VersionCommand.java b/src/main/java/org/bukkit/command/defaults/VersionCommand.java
index e40f017f87d6b6b4770501b106c76dc69ec69abb..fb3668edd4d2fe76c95504ccd2c89b087e32bb7f 100644
--- a/src/main/java/org/bukkit/command/defaults/VersionCommand.java
+++ b/src/main/java/org/bukkit/command/defaults/VersionCommand.java
@@ -65,7 +65,7 @@ public class VersionCommand extends BukkitCommand {
 
             String pluginName = name.toString();
             Plugin exactPlugin = Bukkit.getPluginManager().getPlugin(pluginName);
-            if (exactPlugin != null) {
+            if (exactPlugin != null && exactPlugin.canBeSeenBy(sender)) { // Suki - hide plugins
                 describeToSender(exactPlugin, sender);
                 return true;
             }
@@ -73,7 +73,7 @@ public class VersionCommand extends BukkitCommand {
             boolean found = false;
             pluginName = pluginName.toLowerCase(java.util.Locale.ENGLISH);
             for (Plugin plugin : Bukkit.getPluginManager().getPlugins()) {
-                if (plugin.getName().toLowerCase(java.util.Locale.ENGLISH).contains(pluginName)) {
+                if (plugin.canBeSeenBy(sender) && plugin.getName().toLowerCase(java.util.Locale.ENGLISH).contains(pluginName)) { // Suki - hide plugins
                     describeToSender(plugin, sender);
                     found = true;
                 }
@@ -145,7 +145,7 @@ public class VersionCommand extends BukkitCommand {
             List<String> completions = new ArrayList<String>();
             String toComplete = args[0].toLowerCase(java.util.Locale.ENGLISH);
             for (Plugin plugin : Bukkit.getPluginManager().getPlugins()) {
-                if (StringUtil.startsWithIgnoreCase(plugin.getName(), toComplete)) {
+                if (plugin.canBeSeenBy(sender) && StringUtil.startsWithIgnoreCase(plugin.getName(), toComplete)) { // Suki - hide plugins
                     completions.add(plugin.getName());
                 }
             }
diff --git a/src/main/java/org/bukkit/plugin/Plugin.java b/src/main/java/org/bukkit/plugin/Plugin.java
index 08aef59d8443038771704d9587e31f299e587307..39a0766e7b082c274ae05b1c3f04096b8237b2e4 100644
--- a/src/main/java/org/bukkit/plugin/Plugin.java
+++ b/src/main/java/org/bukkit/plugin/Plugin.java
@@ -4,10 +4,12 @@ import java.io.File;
 import java.io.InputStream;
 import java.util.logging.Logger;
 import org.bukkit.Server;
+import org.bukkit.command.CommandSender;
 import org.bukkit.command.TabExecutor;
 import org.bukkit.configuration.file.FileConfiguration;
 import org.bukkit.generator.BiomeProvider;
 import org.bukkit.generator.ChunkGenerator;
+import org.bukkit.permissions.Permission;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 
@@ -212,4 +214,12 @@ public interface Plugin extends TabExecutor {
      */
     @NotNull
     public String getName();
+
+    // Suki start - hide plugins
+    @NotNull
+    public Permission getSeePluginPermission();
+
+    @NotNull
+    public boolean canBeSeenBy(@NotNull CommandSender sender);
+    // Suki end - hide plugins
 }
diff --git a/src/main/java/org/bukkit/plugin/PluginBase.java b/src/main/java/org/bukkit/plugin/PluginBase.java
index 94f8ceb965cecb5669a84a0ec61c0f706c2a2673..aa50e21a82408f07611cecb94618557368e438cf 100644
--- a/src/main/java/org/bukkit/plugin/PluginBase.java
+++ b/src/main/java/org/bukkit/plugin/PluginBase.java
@@ -1,6 +1,10 @@
 package org.bukkit.plugin;
 
+import org.bukkit.Bukkit;
+import org.bukkit.command.CommandSender;
+import org.bukkit.permissions.Permission;
 import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
 
 /**
  * Represents a base {@link Plugin}
@@ -33,4 +37,59 @@ public abstract class PluginBase implements Plugin {
     public final String getName() {
         return getDescription().getName();
     }
+
+    // Suki start - hide plugins
+    private @Nullable Permission cachedSeePluginPermission = null;
+
+    @Override
+    @NotNull
+    public Permission getSeePluginPermission() {
+        if (this.cachedSeePluginPermission == null) {
+            String permissionName = PluginBase.getSeePluginPermissionName(this.getName());
+            this.cachedSeePluginPermission = Bukkit.getPluginManager().getPermission(permissionName);
+            if (this.cachedSeePluginPermission == null) {
+                this.cachedSeePluginPermission = new Permission(permissionName);
+                Bukkit.getPluginManager().addPermission(this.cachedSeePluginPermission);
+                this.cachedSeePluginPermission.addParent(PluginBase.getSeeAllPluginsPermission(), true);
+            }
+        }
+        return this.cachedSeePluginPermission;
+    }
+
+    @Override
+    @NotNull
+    public boolean canBeSeenBy(@NotNull CommandSender sender) {
+        return !Bukkit.getServer().getHidePluginsIfNoPermission() || sender.hasPermission(this.getSeePluginPermission()) || sender.hasPermission(PluginBase.getSeeAllPluginsPermission());
+    }
+
+    private static @Nullable Permission cachedSeeAllPluginsPermission = null;
+
+    @NotNull
+    public static Permission getSeeAllPluginsPermission() {
+        if (PluginBase.cachedSeeAllPluginsPermission == null) {
+            String permissionName = "suki.seeplugin.*";
+            PluginBase.cachedSeeAllPluginsPermission = Bukkit.getPluginManager().getPermission(permissionName);
+            if (PluginBase.cachedSeeAllPluginsPermission == null) {
+                PluginBase.cachedSeeAllPluginsPermission = new Permission(permissionName);
+                Bukkit.getPluginManager().addPermission(PluginBase.cachedSeeAllPluginsPermission);
+            }
+        }
+        return PluginBase.cachedSeeAllPluginsPermission;
+    }
+
+    @NotNull
+    public static String getSeePluginPermissionName(String pluginName) {
+        StringBuilder alphanumericPluginNameBuilder = new StringBuilder();
+        for (char c : pluginName.toCharArray()) {
+            if ((c >= '0' && c <= '9') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {
+                alphanumericPluginNameBuilder.append(Character.toLowerCase(c));
+            }
+        }
+        String alphanumericPluginName = alphanumericPluginNameBuilder.toString();
+        if (alphanumericPluginName.isEmpty()) {
+            alphanumericPluginName = "other";
+        }
+        return "suki.seeplugin." + alphanumericPluginName;
+    }
+    // Suki end - hide plugins
 }
