From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 20 Jul 2013 22:40:56 -0400
Subject: [PATCH] MonsterEggSpawn Event

Get the itemstack used to spawn an entity

diff --git a/src/main/java/net/minecraft/world/entity/EntityType.java b/src/main/java/net/minecraft/world/entity/EntityType.java
index e5cd4b7609243669c9d84ff8a4988c209e6101aa..5f50b9b7befd470b09fa8ba247864b8243dfa003 100644
--- a/src/main/java/net/minecraft/world/entity/EntityType.java
+++ b/src/main/java/net/minecraft/world/entity/EntityType.java
@@ -340,12 +340,27 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
 
     @Nullable
     public T spawn(ServerLevel world, @Nullable ItemStack stack, @Nullable Player player, BlockPos pos, MobSpawnType spawnReason, boolean alignPosition, boolean invertY) {
+        // EMC start - add new event
+        Consumer<T> consumer = null;
+        final com.empireminecraft.customevents.MonsterEggSpawnEvent event = new com.empireminecraft.customevents.MonsterEggSpawnEvent(player != null ? player.getBukkitEntity() : null, io.papermc.paper.util.MCUtil.toLocation(world, pos), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(stack), spawnReason == MobSpawnType.DISPENSER ? org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DISPENSE_EGG : org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SPAWNER_EGG);
+        if (!event.callEvent()) {
+            return null;
+        }
+        if (event.getAfterSpawn() != null) {
+            consumer = (entity) -> event.getAfterSpawn().accept(entity.getBukkitEntity());
+        }
         // CraftBukkit start
-        return this.spawn(world, stack, player, pos, spawnReason, alignPosition, invertY, spawnReason == MobSpawnType.DISPENSER ? org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DISPENSE_EGG : org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SPAWNER_EGG); // Paper - use correct spawn reason for dispenser spawn eggs
+        return this.spawn(world, stack, player, pos, spawnReason, alignPosition, invertY, spawnReason == MobSpawnType.DISPENSER ? org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.DISPENSE_EGG : org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SPAWNER_EGG, consumer); // Paper - use correct spawn reason for dispenser spawn eggs
+        // EMC end
     }
 
     @Nullable
     public T spawn(ServerLevel worldserver, @Nullable ItemStack itemstack, @Nullable Player entityhuman, BlockPos blockposition, MobSpawnType enummobspawn, boolean flag, boolean flag1, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason spawnReason) {
+        return this.spawn(worldserver, itemstack, entityhuman, blockposition, enummobspawn, flag, flag1, spawnReason, null);
+    }
+    @Nullable
+    public T spawn(ServerLevel worldserver, @Nullable ItemStack itemstack, @Nullable Player entityhuman, BlockPos blockposition, MobSpawnType enummobspawn, boolean flag, boolean flag1, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason spawnReason, @Nullable Consumer<T> afterConsumer) {
+        // EMC end
         // CraftBukkit end
         CompoundTag nbttagcompound;
         Consumer<T> consumer; // CraftBukkit - decompile error
@@ -358,6 +373,11 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
             };
             nbttagcompound = null;
         }
+        // EMC start
+        if (afterConsumer != null) {
+            consumer = consumer.andThen(afterConsumer);
+        }
+        // EMC end
 
         return this.spawn(worldserver, nbttagcompound, consumer, blockposition, enummobspawn, flag, flag1, spawnReason); // CraftBukkit
     }
