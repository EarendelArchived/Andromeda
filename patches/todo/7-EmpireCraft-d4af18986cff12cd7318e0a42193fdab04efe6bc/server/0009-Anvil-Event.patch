From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 31 Dec 2012 01:25:46 -0500
Subject: [PATCH] Anvil Event

Fire an event for anvil usage, remove cap from server, send level to client

diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index ec89526f1eabef4681fed57b74fc1bef5be4c0c1..3f7ff407fd58b2f3a51f4dd675c79e0e88955185 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -1,5 +1,6 @@
 package net.minecraft.world.inventory;
 
+import com.empireminecraft.customevents.AnvilEvent;
 import com.mojang.logging.LogUtils;
 import java.util.Iterator;
 import java.util.Map;
@@ -15,6 +16,8 @@ import net.minecraft.world.item.enchantment.EnchantmentHelper;
 import net.minecraft.world.level.block.AnvilBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import org.apache.commons.lang3.StringUtils;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.slf4j.Logger;
 
 // CraftBukkit start
@@ -277,6 +280,18 @@ public class AnvilMenu extends ItemCombinerMenu {
             if (this.cost.get() >= this.maximumRepairCost && !this.player.getAbilities().instabuild) { // CraftBukkit
                 itemstack1 = ItemStack.EMPTY;
             }
+            // EMC start
+            final int origCost = this.cost.get();
+            AnvilEvent event = new AnvilEvent((org.bukkit.entity.Player) player.getBukkitEntity(), CraftItemStack.asBukkitCopy(itemstack), CraftItemStack.asBukkitCopy(itemstack2), CraftItemStack.asBukkitCopy(itemstack1), this.cost.get());
+            Bukkit.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                itemstack1 = ItemStack.EMPTY;
+            } else {
+                itemstack1 = CraftItemStack.asNMSCopy(event.getResult());
+                this.cost.set(event.getCost());
+                this.cost.forceUpdate = origCost != event.getCost();
+            }
+            // EMC end
 
             if (!itemstack1.isEmpty()) {
                 int k2 = itemstack1.getBaseRepairCost();
diff --git a/src/main/java/net/minecraft/world/inventory/DataSlot.java b/src/main/java/net/minecraft/world/inventory/DataSlot.java
index ee0a182f451f2842369fa7f039f69bc878224676..5ffa2e57aa293ad6ca4a9a9ef0a4a8e6ef24c980 100644
--- a/src/main/java/net/minecraft/world/inventory/DataSlot.java
+++ b/src/main/java/net/minecraft/world/inventory/DataSlot.java
@@ -2,6 +2,7 @@ package net.minecraft.world.inventory;
 
 public abstract class DataSlot {
     private int prevValue;
+    public boolean forceUpdate = false; // EMC
 
     public static DataSlot forContainer(final ContainerData delegate, final int index) {
         return new DataSlot() {
@@ -52,6 +53,7 @@ public abstract class DataSlot {
     public abstract void set(int value);
 
     public boolean checkAndClearUpdateFlag() {
+        if (this.forceUpdate) { return true; } // EMC
         int i = this.get();
         boolean bl = i != this.prevValue;
         this.prevValue = i;
