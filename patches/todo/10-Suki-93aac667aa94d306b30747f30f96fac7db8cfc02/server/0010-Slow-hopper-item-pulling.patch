From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MartijnMuijsers <martijnmuijsers@live.nl>
Date: Thu, 13 Oct 2022 23:06:50 +0200
Subject: [PATCH] Slow hopper item pulling

This patch is based on patch from the EmpireCraft fork (https://github.com/starlis/empirecraft) by Aikar.

diff --git a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
index 3fbcd5e5d83b4451d2bf169971aa23ae5402184b..2a8981ca6b8cde78b1d85029f33f17ebec95fe84 100644
--- a/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/ItemEntity.java
@@ -19,11 +19,13 @@ import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.MoverType;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.entity.vehicle.MinecartHopper;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.gameevent.GameEvent;
+import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 // CraftBukkit start
 import net.minecraft.server.MinecraftServer;
@@ -197,10 +199,27 @@ public class ItemEntity extends Entity {
                 // CraftBukkit end
                 this.discard();
             }
+            markHopperCarts(); // Suki - slow hopper item pulling
 
         }
     }
 
+    // Suki start - slow hopper item pulling
+    private void markHopperCarts() {
+        // No need to mark hoppers as immune if they can pull every tick anyway
+        if (level.sukiConfig().itemPickup.hopper.tickRate == 1) {
+            return;
+        }
+        if (level.sukiConfig().itemPickup.hopper.minecartImmunity.duration >= 0 && this.isAlive() && this.onGround && (level.sukiConfig().itemPickup.hopper.minecartImmunity.detection.maxAge == -1 || this.age < level.sukiConfig().itemPickup.hopper.minecartImmunity.detection.maxAge) && this.age % level.sukiConfig().itemPickup.hopper.minecartImmunity.detection.tickRate == 0) {
+            AABB aabb = this.getBoundingBox().inflate(level.sukiConfig().itemPickup.hopper.minecartImmunity.detection.horizontalDistance, level.sukiConfig().itemPickup.hopper.minecartImmunity.detection.verticalDistance, level.sukiConfig().itemPickup.hopper.minecartImmunity.detection.horizontalDistance);
+            for (Entity entity : this.level.getEntities(this, aabb)) {
+                if (entity instanceof MinecartHopper) {
+                    ((MinecartHopper) entity).pickupImmunity = MinecraftServer.currentTick + level.sukiConfig().itemPickup.hopper.minecartImmunity.duration;
+                }
+            }
+        }
+    }
+    // Suki end - slow hopper item pulling
     // Spigot start - copied from above
     @Override
     public void inactiveTick() {
@@ -221,6 +240,11 @@ public class ItemEntity extends Entity {
             // CraftBukkit end
             this.discard();
         }
+        // Suki start - slow hopper item pulling
+        if (level.sukiConfig().itemPickup.hopper.minecartImmunity.detection.whileInactive) {
+            markHopperCarts();
+        }
+        // Suki end - slow hopper item pulling
     }
     // Spigot end
 
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
index 2866385a64b22b7dc82b6122c62bcea6b0908a60..3914608e4e662ff618f101ff69e4cebacb540093 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/MinecartHopper.java
@@ -22,6 +22,7 @@ public class MinecartHopper extends AbstractMinecartContainer implements Hopper
     private boolean enabled = true;
     private int cooldownTime = -1;
     private final BlockPos lastPosition = BlockPos.ZERO;
+    public int pickupImmunity = 0; // Suki - slow hopper item pulling
 
     public MinecartHopper(EntityType<? extends MinecartHopper> type, Level world) {
         super(type, world);
@@ -158,5 +159,12 @@ public class MinecartHopper extends AbstractMinecartContainer implements Hopper
         this.activatedImmunityTick = Math.max(this.activatedImmunityTick, net.minecraft.server.MinecraftServer.currentTick + 20);
     }
     // Paper end
+    // Suki start - slow hopper item pulling
+    private long tickAttempts = 0;
+    @Override
+    public long getAndIncrementAttemptCounter() {
+        return tickAttempts++;
+    }
+    // Suki end - slow hopper item pulling
 
 }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/Hopper.java b/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
index 6a1405a8630e90db3b5a3c9152259ba6f5f0c784..51e96802ded2d797fe0c5ca144a8ea5e2c85d4a9 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
@@ -1,6 +1,7 @@
 package net.minecraft.world.level.block.entity;
 
 import net.minecraft.world.Container;
+import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
@@ -16,6 +17,8 @@ public interface Hopper extends Container {
 
     default net.minecraft.core.BlockPos getBlockPosition() { return new net.minecraft.core.BlockPos(getLevelX(), getLevelY(), getLevelZ()); } // Paper
 
+    long getAndIncrementAttemptCounter(); // Suki - slow hopper item pulling
+
     double getLevelX();
 
     double getLevelY();
diff --git a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index 698a0ac71cf9fb409d609a81cc2958121260a46d..3f480290d5e0b376de1b9fa0fe2194b6172093c4 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -10,6 +10,7 @@ import net.minecraft.core.Direction;
 import net.minecraft.core.NonNullList;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.chat.Component;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.world.CompoundContainer;
 import net.minecraft.world.Container;
 import net.minecraft.world.ContainerHelper;
@@ -141,6 +142,21 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         return ContainerHelper.removeItem(this.getItems(), slot, amount);
     }
 
+    // Suki start - slow hopper item pulling
+    private long tickAttempts = 0;
+    @Override
+    public long getAndIncrementAttemptCounter() {
+        return tickAttempts++;
+    }
+    private static boolean shouldSuckIn(Level world, Hopper hopper) {
+        if (hopper instanceof MinecartHopper && ((MinecartHopper) hopper).pickupImmunity > MinecraftServer.currentTick) {
+            return true;
+        }
+
+        final int hopperId = (int) hopper.getLevelX() + (int) hopper.getLevelY() + (int) hopper.getLevelZ();
+        return (hopper.getAndIncrementAttemptCounter() + hopperId) % world.sukiConfig().itemPickup.hopper.tickRate == 0;
+    }
+    // Suki end - slow hopper item pulling
     @Override
     public void setItem(int slot, ItemStack stack) {
         this.unpackLootTable((Player) null);
@@ -495,7 +511,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
                 }
                 // Paper end
             });
-        } else {
+        } else if (world.sukiConfig().itemPickup.hopper.tickRate == 1 || shouldSuckIn(world, hopper)) { // Suki - slow hopper item pulling
             Iterator iterator = HopperBlockEntity.getItemsAtAndAbove(world, hopper).iterator();
 
             ItemEntity entityitem;
@@ -510,6 +526,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
 
             return true;
         }
+        return false; // Suki - slow hopper item pulling
     }
 
     // Paper - method unused as logic is inlined above
diff --git a/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java b/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java
index 04f8382680fb6f26e64ecbd0a921cdbfb857c4f6..248dca86bce146e06a39d1ad63a5f4d119691981 100644
--- a/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java
+++ b/src/main/java/org/sucraft/suki/configuration/SukiWorldConfiguration.java
@@ -50,4 +50,42 @@ public class SukiWorldConfiguration extends ConfigurationPart {
 
     // Suki end - all nether bricks count as fortress
 
+    // Suki start - slow hopper item pulling
+
+    public ItemPickup itemPickup;
+
+    public class ItemPickup extends ConfigurationPart {
+
+        public Hopper hopper;
+
+        public class Hopper extends ConfigurationPart {
+
+            public int tickRate = 1;
+
+            public MinecartImmunity minecartImmunity;
+
+            public class MinecartImmunity extends ConfigurationPart {
+
+                public int duration = 200;
+
+                public Detection detection;
+
+                public class Detection extends ConfigurationPart {
+
+                    public int maxAge = 1200;
+                    public int tickRate = 20;
+                    public double verticalDistance = 4;
+                    public double horizontalDistance = 32;
+                    public boolean whileInactive = true;
+
+                }
+
+            }
+
+        }
+
+    }
+
+    // Suki end - slow hopper item pulling
+
 }
