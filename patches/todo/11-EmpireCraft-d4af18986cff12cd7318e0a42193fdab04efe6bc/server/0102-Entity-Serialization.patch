From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 12 Jul 2013 18:58:19 -0400
Subject: [PATCH] Entity Serialization

Allow serializing an Entity to raw NBT, and to get an Entity object without spawning it into the world.

diff --git a/src/main/java/com/empireminecraft/api/CraftEAPI_Entity.java b/src/main/java/com/empireminecraft/api/CraftEAPI_Entity.java
index 873e1ec56ddd90271ae65e6706c5e15f64c9e70f..4cef695dd8eda81c1c7ab85efabac693b14c43f9 100644
--- a/src/main/java/com/empireminecraft/api/CraftEAPI_Entity.java
+++ b/src/main/java/com/empireminecraft/api/CraftEAPI_Entity.java
@@ -24,8 +24,18 @@
 package com.empireminecraft.api;
 
 import com.destroystokyo.paper.entity.RangedEntity;
+import com.empireminecraft.DataConverters;
 import com.empireminecraft.api.meta.Meta;
+import com.empireminecraft.util.MCLog;
+import com.google.common.collect.ImmutableList;
+import com.mojang.serialization.Dynamic;
+import net.minecraft.SharedConstants;
+import net.minecraft.nbt.CompoundTag;
+import net.minecraft.nbt.NbtIo;
+import net.minecraft.nbt.NbtOps;
 import net.minecraft.server.MinecraftServer;
+import net.minecraft.util.datafix.fixes.References;
+import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.PathfinderMob;
 import net.minecraft.world.entity.ai.goal.Goal;
 import net.minecraft.world.entity.ai.goal.MeleeAttackGoal;
@@ -35,6 +45,7 @@ import net.minecraft.world.entity.ai.goal.WrappedGoal;
 import net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
+import org.bukkit.World;
 import org.bukkit.craftbukkit.CraftWorld;
 import org.bukkit.craftbukkit.entity.CraftBlaze;
 import org.bukkit.craftbukkit.entity.CraftCreature;
@@ -44,6 +55,7 @@ import org.bukkit.craftbukkit.entity.CraftGhast;
 import org.bukkit.craftbukkit.entity.CraftMob;
 import org.bukkit.craftbukkit.entity.CraftSpider;
 import org.bukkit.craftbukkit.entity.CraftWolf;
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 import org.bukkit.entity.Blaze;
 import org.bukkit.entity.Creature;
 import org.bukkit.entity.EnderSignal;
@@ -55,7 +67,10 @@ import org.bukkit.entity.Spider;
 import org.bukkit.entity.Wolf;
 import org.jetbrains.annotations.NotNull;
 
-import java.util.HashSet;
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.DataInputStream;
+import java.io.IOException;import java.util.HashSet;
 import java.util.Set;
 import java.util.regex.Pattern;
 
@@ -295,4 +310,53 @@ public class CraftEAPI_Entity implements EAPI_Entity {
     public void setFireballCooldown(@NotNull Ghast ghast, int cooldown) {
         ((CraftGhast) ghast).getHandle().fireballCooldown = cooldown;
     }
+
+    @NotNull
+    public final byte[] serializeEntity(@NotNull Entity craftentity) {
+        net.minecraft.world.entity.Entity entity = ((CraftEntity) craftentity).getHandle();
+        CompoundTag cmp = new CompoundTag();
+        final ImmutableList<net.minecraft.world.entity.Entity > pass = entity.passengers;
+        entity.passengers = ImmutableList.of();
+        entity.save(cmp);
+        entity.passengers = pass;
+        cmp.putInt("DataVersion", SharedConstants.getCurrentVersion().getWorldVersion());
+
+        return NBTToBytes(cmp);
+    }
+
+    public final Entity deserializeEntity(@NotNull byte[] data, @NotNull World world) {
+        if (data.length == 0) {
+            throw new NullPointerException("Data can not be empty for deserialization");
+        }
+        ByteArrayInputStream stream = new ByteArrayInputStream(data);
+
+        try {
+            CompoundTag cmp = NbtIo.readCompressed(new DataInputStream(stream));
+            int version = cmp.contains("DataVersion") ? cmp.getInt("DataVersion") : -1;
+            if (version == -1) {
+                cmp = DataConverters.convert(DataConverters.LegacyType.ENTITY, cmp, -1, DataConverters.LEGACY_VERSION);
+                version = DataConverters.LEGACY_VERSION;
+            }
+            cmp = (CompoundTag) MinecraftServer.getServer().fixerUpper.update(References.ENTITY, new Dynamic(NbtOps.INSTANCE, cmp), version, CraftMagicNumbers.INSTANCE.getDataVersion()).getValue();
+            net.minecraft.world.entity.Entity entity = EntityType.create(cmp, ((CraftWorld) world).getHandle()).orElse(null);
+
+            return entity != null ? entity.getBukkitEntity() : null;
+        } catch (IOException e) {
+            MCLog.exception(e);
+            return null;
+        }
+
+    }
+
+    private static byte[] NBTToBytes(CompoundTag nbttagcompound) {
+        ByteArrayOutputStream bytearrayoutputstream = new ByteArrayOutputStream();
+
+        try {
+            NbtIo.writeCompressed(nbttagcompound, bytearrayoutputstream);
+        } catch (IOException ignored) {
+            return null;
+        }
+
+        return bytearrayoutputstream.toByteArray();
+    }
 }
