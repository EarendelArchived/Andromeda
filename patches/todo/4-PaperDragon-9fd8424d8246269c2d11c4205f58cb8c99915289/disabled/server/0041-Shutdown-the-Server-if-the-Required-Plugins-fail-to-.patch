From 67a6694536b78690adcddcd7b675fc85d13fdc71 Mon Sep 17 00:00:00 2001
From: willies952002 <admin@domnian.com>
Date: Mon, 19 Mar 2018 02:23:21 -0400
Subject: [PATCH] Shutdown the Server if the Required Plugins fail to Load

Based on EmpireCraft Server Patch #76 (https://git.io/vx3xr)
---
 .../com/domnian/paperdragon/DragonConfig.java |  5 +++++
 .../net/minecraft/server/MinecraftServer.java | 19 +++++++++++++++++++
 2 files changed, 24 insertions(+)

diff --git a/src/main/java/com/domnian/paperdragon/DragonConfig.java b/src/main/java/com/domnian/paperdragon/DragonConfig.java
index 2f7bc8187..0e7ea1f26 100644
--- a/src/main/java/com/domnian/paperdragon/DragonConfig.java
+++ b/src/main/java/com/domnian/paperdragon/DragonConfig.java
@@ -12,6 +12,7 @@ import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -156,6 +157,10 @@ public class DragonConfig {
         return config.getString(path, config.getString(path));
     }
 
+    public static List<String> requiredPlugins = new ArrayList<>();
+    private static void requiredPlugins() {
+        requiredPlugins = getList("settings.required-plugins", requiredPlugins);
+    }
     // TODO Add New Settings!! :D
 
 }
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 74fb4d1f0..b06c0270c 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -257,6 +257,25 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
 
         persistentscoreboard.a((Scoreboard) this.getScoreboard());
         this.getScoreboard().a((Runnable) (new RunnableSaveScoreboard(persistentscoreboard)));
+        // PaperDragon start - Shutdown if a Required Plugin Fails to Load
+        List<String> failed = new java.util.ArrayList<>();
+        com.domnian.paperdragon.DragonConfig.requiredPlugins.forEach(pluginName -> {
+            org.bukkit.plugin.Plugin required = server.getPluginManager().getPlugin(pluginName);
+            if (required == null || !required.isEnabled()) failed.add(pluginName);
+        });
+        if (failed.size() > 0) {
+            String names = org.apache.commons.lang.StringUtils.join(failed.toArray(new String[]{}), ", ");
+            if (failed.size() == 2) {
+                names = failed.get(0) + " and " + failed.get(1);
+            } else if (failed.size() > 2) {
+                String p1 = names.substring(0, names.lastIndexOf(",") + 1);
+                String p2 = names.substring(names.lastIndexOf(",") + 1);
+                names = p1 + " and" + p2;
+            }
+            System.err.println("CRITICAL - " + names + " failed to load!");
+            server.shutdown();
+        }
+        // PaperDragon end
     }
 
     protected abstract boolean init() throws IOException;
-- 
2.20.1.windows.1

