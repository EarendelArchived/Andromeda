From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: chickeneer <emcchickeneer@gmail.com>
Date: Mon, 6 Sep 2021 02:05:16 -0500
Subject: [PATCH] Mitigate ConcurrentModificationException by copying
 entitySection access


diff --git a/src/main/java/net/minecraft/world/level/entity/PersistentEntitySectionManager.java b/src/main/java/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
index 8d2143dc2a4a20c585e84cfd3c218d8b5a95e165..e799de11774c282822366d8a36f82d82d3afaf94 100644
--- a/src/main/java/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
+++ b/src/main/java/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
@@ -197,23 +197,23 @@ public class PersistentEntitySectionManager<T extends EntityAccess> implements A
             if (flag2 && !flag3) {
                 entitysection.getEntities().filter((entityaccess) -> {
                     return !entityaccess.isAlwaysTicking();
-                }).forEach(this::stopTicking);
+                }).collect(Collectors.toList()).forEach(this::stopTicking); // PaperDragon
             }
 
             if (flag && !flag1) {
                 entitysection.getEntities().filter((entityaccess) -> {
                     return !entityaccess.isAlwaysTicking();
-                }).forEach(this::stopTracking);
+                }).collect(Collectors.toList()).forEach(this::stopTracking); // PaperDragon
             } else if (!flag && flag1) {
                 entitysection.getEntities().filter((entityaccess) -> {
                     return !entityaccess.isAlwaysTicking();
-                }).forEach(this::startTracking);
+                }).collect(Collectors.toList()).forEach(this::startTracking); // PaperDragon
             }
 
             if (!flag2 && flag3) {
                 entitysection.getEntities().filter((entityaccess) -> {
                     return !entityaccess.isAlwaysTicking();
-                }).forEach(this::startTicking);
+                }).collect(Collectors.toList()).forEach(this::startTicking); // PaperDragon
             }
 
         });
