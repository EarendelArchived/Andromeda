From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Fri, 23 Dec 2022 16:50:22 +0900
Subject: [PATCH] Implement Boat Fall

Original: EcoBuilder13
Copyright (C) 2022 EcoBuilder13, All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

diff --git a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
index 231c71939982ba4ce9305bc8eb6174ed45102c9f..8bc66f31d745d9f88bfa7e19d861b38722c9ca8a 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
@@ -893,13 +893,27 @@ public class Boat extends Entity implements VariantHolder<Boat.Type> {
         return player.isSecondaryUseActive() ? InteractionResult.PASS : (this.outOfControlTicks < 60.0F ? (!this.level.isClientSide ? (player.startRiding(this) ? InteractionResult.CONSUME : InteractionResult.PASS) : InteractionResult.SUCCESS) : InteractionResult.PASS);
     }
 
+    // Andromeda start - Implement Boat Fall
+    protected void dropLoots() {
+        int i;
+
+        for (i = 0; i < 3; ++i) {
+            this.spawnAtLocation(this.getVariant().getPlanks());
+        }
+
+        for (i = 0; i < 2; ++i) {
+            this.spawnAtLocation(Items.STICK);
+        }
+    }
+    // Andromeda end
+
     @Override
     protected void checkFallDamage(double heightDifference, boolean onGround, BlockState state, BlockPos landedPosition) {
         this.lastYd = this.getDeltaMovement().y;
         if (!this.isPassenger()) {
             if (onGround) {
                 if (this.fallDistance > 3.0F) {
-                    if (this.status != Boat.Status.ON_LAND) {
+                    if (!this.level.andromedaWorldConfiguration.breakBoatWhenLand) { // Andromeda - Implement Boat Fall
                         this.resetFallDistance();
                         return;
                     }
@@ -913,15 +927,7 @@ public class Boat extends Entity implements VariantHolder<Boat.Type> {
                     if (!destroyEvent.isCancelled()) {
                         this.kill();
                         if (this.level.getGameRules().getBoolean(GameRules.RULE_DOENTITYDROPS)) {
-                            int i;
-
-                            for (i = 0; i < 3; ++i) {
-                                this.spawnAtLocation((ItemLike) this.getVariant().getPlanks());
-                            }
-
-                            for (i = 0; i < 2; ++i) {
-                                this.spawnAtLocation((ItemLike) Items.STICK);
-                            }
+                            dropLoots(); // Andromeda - Implement Boat Fall
                         }
                     }
                     } // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java b/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java
index a9fb2d5e95d5caa71b794eda0f2749ff795ed4e7..92b238c32b622cd1614cd2f6613320f17e9a56a8 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java
@@ -96,6 +96,23 @@ public class ChestBoat extends Boat implements HasCustomInventoryScreen, Contain
         return this.canAddPassenger(player) && !player.isSecondaryUseActive() ? super.interact(player, hand) : this.interactWithChestVehicle(this::gameEvent, player);
     }
 
+    // Andromeda start - Implement Boat Fall
+    @Override
+    protected void dropLoots() {
+        int i;
+
+        for (i = 0; i < 3; ++i) {
+            this.spawnAtLocation(this.getVariant().getPlanks());
+        }
+
+        for (i = 0; i < 2; ++i) {
+            this.spawnAtLocation(Items.STICK);
+        }
+
+        this.spawnAtLocation(Items.CHEST);
+    }
+    // Andromeda end
+
     @Override
     public void openCustomInventoryScreen(Player player) {
         player.openMenu(this);
diff --git a/src/main/java/team/earendel/andromeda/configurations/AndromedaWorldConfiguration.java b/src/main/java/team/earendel/andromeda/configurations/AndromedaWorldConfiguration.java
index 3b9457200c6170db9e3510521174e3ef1c65a63b..cef9f9c4b3abfe5fcd2f3235a2e70112714df44e 100644
--- a/src/main/java/team/earendel/andromeda/configurations/AndromedaWorldConfiguration.java
+++ b/src/main/java/team/earendel/andromeda/configurations/AndromedaWorldConfiguration.java
@@ -87,4 +87,11 @@ public class AndromedaWorldConfiguration {
         if (portalMaxWidth < portalMinWidth && !(portalMaxWidth == -1)) portalMaxWidth = 21;
         if (portalMaxHeight < portalMinHeight && !(portalMaxHeight == -1)) portalMaxHeight = 21;
     }
+
+    public boolean breakBoatWhenLand = false;
+    public boolean dropBoatItems = true;
+    private void boatSettings() {
+        breakBoatWhenLand = getBoolean("entity.boat.break-when-land.enabled", breakBoatWhenLand);
+        dropBoatItems = getBoolean("entity.boat.break-when-land.drop-items", dropBoatItems);
+    }
 }
