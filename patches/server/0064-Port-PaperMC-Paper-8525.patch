From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Thu, 12 Jan 2023 16:03:30 +0900
Subject: [PATCH] Port PaperMC/Paper#8525


diff --git a/src/main/java/net/minecraft/core/dispenser/DispenseItemBehavior.java b/src/main/java/net/minecraft/core/dispenser/DispenseItemBehavior.java
index af58729405e9138c2c2fc094d95a4962edcb402b..47a48b2ee77b0fde7469ff516bdfe5dbbb41ae12 100644
--- a/src/main/java/net/minecraft/core/dispenser/DispenseItemBehavior.java
+++ b/src/main/java/net/minecraft/core/dispenser/DispenseItemBehavior.java
@@ -952,6 +952,7 @@ public interface DispenseItemBehavior {
                 Direction enumdirection = (Direction) pointer.getBlockState().getValue(DispenserBlock.FACING);
                 BlockPos blockposition = pointer.getPos().relative(enumdirection);
 
+                if (worldserver.isEmptyBlock(blockposition) && WitherSkullBlock.canSpawnMob(worldserver, blockposition, stack)) { // Andromeda - Port PaperMC/Paper#8525
                 // CraftBukkit start
                 org.bukkit.block.Block bukkitBlock = worldserver.getWorld().getBlockAt(pointer.getPos().getX(), pointer.getPos().getY(), pointer.getPos().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(stack.copyWithCount(1)); // Paper - single item in event
@@ -976,8 +977,7 @@ public interface DispenseItemBehavior {
                 }
                 // CraftBukkit end
 
-                if (worldserver.isEmptyBlock(blockposition) && WitherSkullBlock.canSpawnMob(worldserver, blockposition, stack)) {
-                    worldserver.setBlock(blockposition, (BlockState) Blocks.WITHER_SKELETON_SKULL.defaultBlockState().setValue(SkullBlock.ROTATION, RotationSegment.convertToSegment(enumdirection)), 3);
+                    worldserver.setBlock(blockposition, (BlockState) Blocks.WITHER_SKELETON_SKULL.defaultBlockState().setValue(SkullBlock.ROTATION, enumdirection.getAxis() == Direction.Axis.Y ? 0 : enumdirection.getOpposite().get2DDataValue() * 4), 3);
                     worldserver.gameEvent((Entity) null, GameEvent.BLOCK_PLACE, blockposition);
                     BlockEntity tileentity = worldserver.getBlockEntity(blockposition);
 
@@ -1001,6 +1001,7 @@ public interface DispenseItemBehavior {
                 BlockPos blockposition = pointer.getPos().relative((Direction) pointer.getBlockState().getValue(DispenserBlock.FACING));
                 CarvedPumpkinBlock blockpumpkincarved = (CarvedPumpkinBlock) Blocks.CARVED_PUMPKIN;
 
+                if (worldserver.isEmptyBlock(blockposition) && blockpumpkincarved.canSpawnGolem(worldserver, blockposition)) {
                 // CraftBukkit start
                 org.bukkit.block.Block bukkitBlock = worldserver.getWorld().getBlockAt(pointer.getPos().getX(), pointer.getPos().getY(), pointer.getPos().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(stack.copyWithCount(1)); // Paper - single item in event
@@ -1025,7 +1026,6 @@ public interface DispenseItemBehavior {
                 }
                 // CraftBukkit end
 
-                if (worldserver.isEmptyBlock(blockposition) && blockpumpkincarved.canSpawnGolem(worldserver, blockposition)) {
                     if (!worldserver.isClientSide) {
                         worldserver.setBlock(blockposition, blockpumpkincarved.defaultBlockState(), 3);
                         worldserver.gameEvent((Entity) null, GameEvent.BLOCK_PLACE, blockposition);
@@ -1074,6 +1074,7 @@ public interface DispenseItemBehavior {
                 BlockPos blockposition = pointer.getPos().relative((Direction) pointer.getBlockState().getValue(DispenserBlock.FACING));
                 BlockState iblockdata = worldserver.getBlockState(blockposition);
 
+                final java.util.function.Supplier<@org.jetbrains.annotations.Nullable ItemStack> callEvent = () -> { // Andromeda - Port PaperMC/Paper#8525
                 // CraftBukkit start
                 org.bukkit.block.Block bukkitBlock = worldserver.getWorld().getBlockAt(pointer.getPos().getX(), pointer.getPos().getY(), pointer.getPos().getZ());
                 CraftItemStack craftItem = CraftItemStack.asCraftMirror(stack.copyWithCount(1)); // Paper - only single item in event
@@ -1096,15 +1097,25 @@ public interface DispenseItemBehavior {
                         return stack;
                     }
                 }
+                return null; // Andromeda - Port PaperMC/Paper#8525
                 // CraftBukkit end
+                }; // Andromeda - Port PaperMC/Paper#8525
 
                 if (iblockdata.is(BlockTags.BEEHIVES, (blockbase_blockdata) -> {
                     return blockbase_blockdata.hasProperty(BeehiveBlock.HONEY_LEVEL) && blockbase_blockdata.getBlock() instanceof BeehiveBlock;
                 }) && (Integer) iblockdata.getValue(BeehiveBlock.HONEY_LEVEL) >= 5) {
+                    // Andromeda - Port PaperMC/Paper#8525
+                    ItemStack returnedStack = callEvent.get();
+                    if (returnedStack != null) return returnedStack;
+                    // Andromeda end
                     ((BeehiveBlock) iblockdata.getBlock()).releaseBeesAndResetHoneyLevel(worldserver, iblockdata, blockposition, (Player) null, BeehiveBlockEntity.BeeReleaseStatus.BEE_RELEASED);
                     this.setSuccess(true);
                     return this.takeLiquid(pointer, stack, new ItemStack(Items.HONEY_BOTTLE));
                 } else if (worldserver.getFluidState(blockposition).is(FluidTags.WATER)) {
+                    // Andromeda - Port PaperMC/Paper#8525
+                    ItemStack returnedStack = callEvent.get();
+                    if (returnedStack != null) return returnedStack;
+                    // Andromeda end
                     this.setSuccess(true);
                     return this.takeLiquid(pointer, stack, PotionUtils.setPotion(new ItemStack(Items.POTION), Potions.WATER));
                 } else {
