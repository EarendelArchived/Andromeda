From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Thu, 12 Jan 2023 17:41:19 +0900
Subject: [PATCH] Port PaperMC/Paper#8274


diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 7926747ca0f5e4dc17bccb807f1a2dcff8594100..fa83fa15a5d930a9605d3e305da1a0700c43cd6b 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -713,7 +713,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
                 Location curPos = this.getCraftPlayer().getLocation(); // Spigot
 
                 entity.absMoveTo(d3, d4, d5, f, f1);
-                this.player.absMoveTo(d3, d4, d5, this.player.getYRot(), this.player.getXRot()); // CraftBukkit
+                //this.player.absMoveTo(d3, d4, d5, this.player.getYRot(), this.player.getXRot()); // CraftBukkit // Andromeda - Port PaperMC/Paper#8274
 
                 // Paper start - optimise out extra getCubes
                 boolean teleportBack = flag2; // violating this is always a fail
@@ -726,7 +726,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
                 }
                 if (teleportBack) { // Paper end - optimise out extra getCubes
                     entity.absMoveTo(d0, d1, d2, f, f1);
-                    this.player.absMoveTo(d0, d1, d2, this.player.getYRot(), this.player.getXRot()); // CraftBukkit
+                    //this.player.absMoveTo(d0, d1, d2, this.player.getYRot(), this.player.getXRot()); // CraftBukkit // Andromeda - Port PaperMC/Paper#8274
                     this.connection.send(new ClientboundMoveVehiclePacket(entity));
                     return;
                 }
@@ -734,6 +734,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
                 // CraftBukkit start - fire PlayerMoveEvent
                 Player player = this.getCraftPlayer();
                 // Spigot Start
+                /* // Andromeda - Port PaperMC/Paper#8274
                 if ( !this.hasMoved )
                 {
                     this.lastPosX = curPos.getX();
@@ -743,13 +744,14 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
                     this.lastPitch = curPos.getPitch();
                     this.hasMoved = true;
                 }
+                 */ // Andromeda - Port PaperMC/Paper#8274
                 // Spigot End
                 Location from = new Location(player.getWorld(), this.lastPosX, this.lastPosY, this.lastPosZ, this.lastYaw, this.lastPitch); // Get the Players previous Event location.
                 Location to = player.getLocation().clone(); // Start off the To location as the Players current location.
 
                 // If the packet contains movement information then we update the To location with the correct XYZ.
                 to.setX(packet.getX());
-                to.setY(packet.getY());
+                to.setY(packet.getY() + entity.getPassengersRidingOffset() + this.player.getMyRidingOffset()); // Andromeda - Port PaperMC/Paper#8274
                 to.setZ(packet.getZ());
 
                 // If the packet contains look information then we update the To location with the correct Yaw & Pitch.
@@ -772,12 +774,17 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
                     // Skip the first time we do this
                     if (true) { // Spigot - don't skip any move events
                         Location oldTo = to.clone();
+                        Location currentPos = player.getLocation(); // Andromeda - Port PaperMC/Paper#8274
                         PlayerMoveEvent event = new PlayerMoveEvent(player, from, to);
                         this.cserver.getPluginManager().callEvent(event);
 
                         // If the event is cancelled we move the player back to their old location.
                         if (event.isCancelled()) {
-                            this.teleport(from);
+                            // Andromeda start - Port PaperMC/Paper#8274
+                            this.awaitingPositionFromClient = null;
+                            entity.absMoveTo(d0, d1, d2, f, f1);
+                            this.connection.send(new ClientboundMoveVehiclePacket(entity));
+                            // Andromeda end
                             return;
                         }
 
@@ -785,13 +792,17 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
                         // there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
                         // We only do this if the Event was not cancelled.
                         if (!oldTo.equals(event.getTo()) && !event.isCancelled()) {
-                            this.player.getBukkitEntity().teleport(event.getTo(), PlayerTeleportEvent.TeleportCause.PLUGIN);
+                            // Andromeda start - Port PaperMC/Paper#8274
+                            this.awaitingPositionFromClient = null;
+                            entity.absMoveTo(event.getTo().getX(), event.getTo().getY(), event.getTo().getZ(), event.getTo().getYaw(), event.getTo().getPitch());
+                            this.connection.send(new ClientboundMoveVehiclePacket(entity));
+                            // Andromeda end
                             return;
                         }
 
                         // Check to see if the Players Location has some how changed during the call of the event.
                         // This can happen due to a plugin teleporting the player instead of using .setTo()
-                        if (!from.equals(this.getCraftPlayer().getLocation()) && this.justTeleported) {
+                        if (!currentPos.equals(this.getCraftPlayer().getLocation()) && this.justTeleported) { // Andromeda - Port PaperMC/Paper#8274
                             this.justTeleported = false;
                             return;
                         }
