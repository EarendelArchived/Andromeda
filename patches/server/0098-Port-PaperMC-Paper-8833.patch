From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@gmail.com>
Date: Fri, 10 Feb 2023 00:08:23 +0900
Subject: [PATCH] Port PaperMC/Paper#8833


diff --git a/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java b/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java
index 0a796fad50467114d273e06f65a58a57de61e99d..f077bd3201a5ca2e8025bf7be640b60742e59af2 100644
--- a/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java
+++ b/src/main/java/io/papermc/paper/chunk/PlayerChunkLoader.java
@@ -89,7 +89,7 @@ public final class PlayerChunkLoader {
 
         final int priorityCompare = Double.compare(holder1 == null ? Double.MAX_VALUE : holder1.priority, holder2 == null ? Double.MAX_VALUE : holder2.priority);
 
-        final int lastLoadTimeCompare = Long.compare(p1.lastChunkLoad, p2.lastChunkLoad);
+        final int lastLoadTimeCompare = team.earendel.andromeda.configurations.GlobalConfiguration.get().paperPullRequestsPort.fixChunkSendingWhenTheComputedTimeOverflows ? Long.compare(p1.lastChunkLoad - p2.lastChunkLoad, 0) : Long.compare(p1.lastChunkLoad, p2.lastChunkLoad); // Andromeda
 
         if ((holder1 == null || holder2 == null || lastLoadTimeCompare == 0 || holder1.priority < 0.0 || holder2.priority < 0.0) && priorityCompare != 0) {
             return priorityCompare;
@@ -114,7 +114,7 @@ public final class PlayerChunkLoader {
             return 0;
         }
 
-        final int timeCompare = Long.compare(p1.nextChunkSendTarget, p2.nextChunkSendTarget);
+        final int timeCompare = team.earendel.andromeda.configurations.GlobalConfiguration.get().paperPullRequestsPort.fixChunkSendingWhenTheComputedTimeOverflows ? Long.compare(p1.lastChunkLoad - p2.lastChunkLoad, 0) : Long.compare(p1.nextChunkSendTarget, p2.nextChunkSendTarget); // Andromeda
         if (timeCompare != 0) {
             return timeCompare;
         }
@@ -520,14 +520,14 @@ public final class PlayerChunkLoader {
     private static long nextChunkSend;
     private void trySendChunks() {
         final long time = System.nanoTime();
-        if (time < nextChunkSend) {
+        if (team.earendel.andromeda.configurations.GlobalConfiguration.get().paperPullRequestsPort.fixChunkSendingWhenTheComputedTimeOverflows ? nextChunkSend - time > 0 : time < nextChunkSend) { // Andromeda
             return;
         }
         // drain entries from wait queue
         while (!this.chunkSendWaitQueue.isEmpty()) {
             final PlayerLoaderData data = this.chunkSendWaitQueue.first();
 
-            if (data.nextChunkSendTarget > time) {
+            if (team.earendel.andromeda.configurations.GlobalConfiguration.get().paperPullRequestsPort.fixChunkSendingWhenTheComputedTimeOverflows ? data.nextChunkSendTarget - time > 0 : data.nextChunkSendTarget > time) { // Andromeda
                 break;
             }
 
@@ -599,7 +599,7 @@ public final class PlayerChunkLoader {
             });
 
             nextChunkSend = this.getMaxSendAddend() + time;
-            if (time < nextChunkSend) {
+            if (team.earendel.andromeda.configurations.GlobalConfiguration.get().paperPullRequestsPort.fixChunkSendingWhenTheComputedTimeOverflows ? nextChunkSend - time > 0 : time < nextChunkSend) { // Andromeda
                 break;
             }
         }
diff --git a/src/main/java/team/earendel/andromeda/configurations/GlobalConfiguration.java b/src/main/java/team/earendel/andromeda/configurations/GlobalConfiguration.java
index cb3bd4d1578332b02c816ad76a76f8d2720b4941..c0e607b7e7b20080633ec5ad8d92f60505648f6e 100644
--- a/src/main/java/team/earendel/andromeda/configurations/GlobalConfiguration.java
+++ b/src/main/java/team/earendel/andromeda/configurations/GlobalConfiguration.java
@@ -173,6 +173,8 @@ public class GlobalConfiguration extends ConfigurationPart {
 
         public boolean fixChunkLoadingWhenTheRateIsSetToOne = true;
 
+        public boolean fixChunkSendingWhenTheComputedTimeOverflows = true;
+
     }
 
 }
