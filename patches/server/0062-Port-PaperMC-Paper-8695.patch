From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Thu, 12 Jan 2023 15:42:46 +0900
Subject: [PATCH] Port PaperMC/Paper#8695


diff --git a/src/main/java/net/minecraft/network/syncher/SynchedEntityData.java b/src/main/java/net/minecraft/network/syncher/SynchedEntityData.java
index 37e193f57938047c8b886ed7d2816411392f94b4..ebffe1a6d2775c9d5b651b2aac56c233926e8fbe 100644
--- a/src/main/java/net/minecraft/network/syncher/SynchedEntityData.java
+++ b/src/main/java/net/minecraft/network/syncher/SynchedEntityData.java
@@ -153,6 +153,16 @@ public class SynchedEntityData {
     }
     // CraftBukkit end
 
+    // Andromeda start - Port PaperMC/Paper#8695
+    public <T> void markDirtyIfNotDefault(EntityDataAccessor<T> datawatcherobject) {
+        DataItem<T> item = this.getItem(datawatcherobject);
+        if (!item.isSetToDefault()) {
+            item.setDirty(true);
+            this.isDirty = true;
+        }
+    }
+    // Andromeda end
+
     public boolean isDirty() {
         return this.isDirty;
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index af7e769755d2897226730025aee55287d9537a46..f558998f83462e9c9846ae1d2e0dafbe3af61531 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1835,11 +1835,14 @@ public class ServerPlayer extends Player {
         if (alive) {
             this.getInventory().replaceWith(oldPlayer.getInventory());
             this.setHealth(oldPlayer.getHealth());
+            this.getEntityData().markDirtyIfNotDefault(LivingEntity.DATA_HEALTH_ID); // Andromeda - Port PaperMC/Paper#8695
+            this.getEntityData().markDirtyIfNotDefault(Player.DATA_PLAYER_ABSORPTION_ID); // Andromeda - Port PaperMC/Paper#8695
             this.foodData = oldPlayer.foodData;
             this.experienceLevel = oldPlayer.experienceLevel;
             this.totalExperience = oldPlayer.totalExperience;
             this.experienceProgress = oldPlayer.experienceProgress;
             this.setScore(oldPlayer.getScore());
+            this.getEntityData().markDirtyIfNotDefault(Player.DATA_SCORE_ID); // Andromeda - Port PaperMC/Paper#8695
             this.portalEntrancePos = oldPlayer.portalEntrancePos;
         } else if (this.level.getGameRules().getBoolean(GameRules.RULE_KEEPINVENTORY) || oldPlayer.isSpectator()) {
             this.getInventory().replaceWith(oldPlayer.getInventory());
@@ -1847,11 +1850,12 @@ public class ServerPlayer extends Player {
             this.totalExperience = oldPlayer.totalExperience;
             this.experienceProgress = oldPlayer.experienceProgress;
             this.setScore(oldPlayer.getScore());
+            this.getEntityData().markDirtyIfNotDefault(Player.DATA_SCORE_ID); // Andromeda - Port PaperMC/Paper#8695
         }
 
         this.enchantmentSeed = oldPlayer.enchantmentSeed;
         this.enderChestInventory = oldPlayer.enderChestInventory;
-        this.getEntityData().set(ServerPlayer.DATA_PLAYER_MODE_CUSTOMISATION, (Byte) oldPlayer.getEntityData().get(ServerPlayer.DATA_PLAYER_MODE_CUSTOMISATION));
+        this.getEntityData().markDirtyIfNotDefault(Player.DATA_PLAYER_MODE_CUSTOMISATION); // Andromeda - Port PaperMC/Paper#8695
         this.lastSentExp = -1;
         this.lastSentHealth = -1.0F;
         this.lastSentFood = -1;
@@ -1859,7 +1863,9 @@ public class ServerPlayer extends Player {
         this.seenCredits = oldPlayer.seenCredits;
         this.enteredNetherPosition = oldPlayer.enteredNetherPosition;
         this.setShoulderEntityLeft(oldPlayer.getShoulderEntityLeft());
+        this.getEntityData().markDirtyIfNotDefault(Player.DATA_SHOULDER_LEFT); // Andromeda - Port PaperMC/Paper#8695
         this.setShoulderEntityRight(oldPlayer.getShoulderEntityRight());
+        this.getEntityData().markDirtyIfNotDefault(Player.DATA_SHOULDER_RIGHT); // Andromeda - Port PaperMC/Paper#8695
         this.setLastDeathLocation(oldPlayer.getLastDeathLocation());
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 1c5623800923c4f8d2da618bf97b8410ac6fee5a..31f249070453f214a1ce6ddcb6a8b561e8de9735 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -141,8 +141,8 @@ public abstract class Player extends LivingEntity {
     // CraftBukkit - decompile error
     private static final Map<Pose, EntityDimensions> POSES = ImmutableMap.<Pose, EntityDimensions>builder().put(Pose.STANDING, Player.STANDING_DIMENSIONS).put(Pose.SLEEPING, Player.SLEEPING_DIMENSIONS).put(Pose.FALL_FLYING, EntityDimensions.scalable(0.6F, 0.6F)).put(Pose.SWIMMING, EntityDimensions.scalable(0.6F, 0.6F)).put(Pose.SPIN_ATTACK, EntityDimensions.scalable(0.6F, 0.6F)).put(Pose.CROUCHING, EntityDimensions.scalable(0.6F, 1.5F)).put(Pose.DYING, EntityDimensions.fixed(0.2F, 0.2F)).build();
     private static final int FLY_ACHIEVEMENT_SPEED = 25;
-    private static final EntityDataAccessor<Float> DATA_PLAYER_ABSORPTION_ID = SynchedEntityData.defineId(Player.class, EntityDataSerializers.FLOAT);
-    private static final EntityDataAccessor<Integer> DATA_SCORE_ID = SynchedEntityData.defineId(Player.class, EntityDataSerializers.INT);
+    public static final EntityDataAccessor<Float> DATA_PLAYER_ABSORPTION_ID = SynchedEntityData.defineId(Player.class, EntityDataSerializers.FLOAT); // Andromeda - package -> public
+    public static final EntityDataAccessor<Integer> DATA_SCORE_ID = SynchedEntityData.defineId(Player.class, EntityDataSerializers.INT); // Andromeda - package -> public
     public static final EntityDataAccessor<Byte> DATA_PLAYER_MODE_CUSTOMISATION = SynchedEntityData.defineId(Player.class, EntityDataSerializers.BYTE);
     protected static final EntityDataAccessor<Byte> DATA_PLAYER_MAIN_HAND = SynchedEntityData.defineId(Player.class, EntityDataSerializers.BYTE);
     protected static final EntityDataAccessor<CompoundTag> DATA_SHOULDER_LEFT = SynchedEntityData.defineId(Player.class, EntityDataSerializers.COMPOUND_TAG);
