From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Fri, 23 Dec 2022 16:50:22 +0900
Subject: [PATCH] Implement Boat Fall

SHA: b17e98503e58a708e9364b6acb6a0ca9b011f93f

Original: EcoBuilder13
Copyright (C) 2023 EcoBuilder13, All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

diff --git a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
index 231c71939982ba4ce9305bc8eb6174ed45102c9f..9e0dd3f1016f9336a544f7665de706fafab437c4 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/Boat.java
@@ -893,13 +893,27 @@ public class Boat extends Entity implements VariantHolder<Boat.Type> {
         return player.isSecondaryUseActive() ? InteractionResult.PASS : (this.outOfControlTicks < 60.0F ? (!this.level.isClientSide ? (player.startRiding(this) ? InteractionResult.CONSUME : InteractionResult.PASS) : InteractionResult.SUCCESS) : InteractionResult.PASS);
     }
 
+    // Andromeda start - Implement Boat Fall
+    protected void dropLoots() {
+        int i;
+
+        for (i = 0; i < 3; ++i) {
+            this.spawnAtLocation(this.getVariant().getPlanks());
+        }
+
+        for (i = 0; i < 2; ++i) {
+            this.spawnAtLocation(Items.STICK);
+        }
+    }
+    // Andromeda end
+
     @Override
     protected void checkFallDamage(double heightDifference, boolean onGround, BlockState state, BlockPos landedPosition) {
         this.lastYd = this.getDeltaMovement().y;
         if (!this.isPassenger()) {
             if (onGround) {
                 if (this.fallDistance > 3.0F) {
-                    if (this.status != Boat.Status.ON_LAND) {
+                    if (!this.level.andromedaLevelConfiguration().vehicle.boat.breakWhenLand) { // Andromeda - Implement Boat Fall
                         this.resetFallDistance();
                         return;
                     }
@@ -912,16 +926,8 @@ public class Boat extends Entity implements VariantHolder<Boat.Type> {
                     this.level.getCraftServer().getPluginManager().callEvent(destroyEvent);
                     if (!destroyEvent.isCancelled()) {
                         this.kill();
-                        if (this.level.getGameRules().getBoolean(GameRules.RULE_DOENTITYDROPS)) {
-                            int i;
-
-                            for (i = 0; i < 3; ++i) {
-                                this.spawnAtLocation((ItemLike) this.getVariant().getPlanks());
-                            }
-
-                            for (i = 0; i < 2; ++i) {
-                                this.spawnAtLocation((ItemLike) Items.STICK);
-                            }
+                        if (this.level.getGameRules().getBoolean(GameRules.RULE_DOENTITYDROPS) && this.level.andromedaLevelConfiguration().vehicle.boat.dropItemsWhenBreak) {
+                            dropLoots(); // Andromeda - Implement Boat Fall
                         }
                     }
                     } // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java b/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java
index a99e2586962952332dd9904ef5bb50a0d3083266..7f4edffdf079da2258bb11deda62a3ae8833b04d 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/ChestBoat.java
@@ -96,6 +96,23 @@ public class ChestBoat extends Boat implements HasCustomInventoryScreen, Contain
         return this.canAddPassenger(player) && !player.isSecondaryUseActive() ? super.interact(player, hand) : this.interactWithChestVehicle(this::gameEvent, player);
     }
 
+    // Andromeda start - Implement Boat Fall
+    @Override
+    protected void dropLoots() {
+        int i;
+
+        for (i = 0; i < 3; ++i) {
+            this.spawnAtLocation(this.getVariant().getPlanks());
+        }
+
+        for (i = 0; i < 2; ++i) {
+            this.spawnAtLocation(Items.STICK);
+        }
+
+        this.spawnAtLocation(Items.CHEST);
+    }
+    // Andromeda end
+
     @Override
     public void openCustomInventoryScreen(Player player) {
         player.openMenu(this);
diff --git a/src/main/java/team/earendel/andromeda/configurations/LevelConfigurations.java b/src/main/java/team/earendel/andromeda/configurations/LevelConfigurations.java
index 00a61572df804073c78300fbd034461e9058c03c..a5b8ec1fa0ecd8d4856851a0c4b0ac291a29f942 100644
--- a/src/main/java/team/earendel/andromeda/configurations/LevelConfigurations.java
+++ b/src/main/java/team/earendel/andromeda/configurations/LevelConfigurations.java
@@ -42,4 +42,16 @@ public class LevelConfigurations extends ConfigurationPart {
         }
 
     }
+
+    public Vehicle vehicle;
+    public class Vehicle extends ConfigurationPart {
+
+        public Boat boat;
+        public class Boat extends ConfigurationPart {
+            public boolean breakWhenLand = false;
+            public boolean dropItemsWhenBreak = false;
+        }
+
+    }
+
 }
