From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Thu, 12 Jan 2023 17:35:49 +0900
Subject: [PATCH] Port PaperMC/Paper#8344


diff --git a/src/main/java/io/papermc/paper/adventure/PaperAdventure.java b/src/main/java/io/papermc/paper/adventure/PaperAdventure.java
index 01e424792f68bac73ec41726031ebbb53df13da7..e93cd95dd7d0f76e7fc485e275cf593ae63891a0 100644
--- a/src/main/java/io/papermc/paper/adventure/PaperAdventure.java
+++ b/src/main/java/io/papermc/paper/adventure/PaperAdventure.java
@@ -189,6 +189,14 @@ public final class PaperAdventure {
         return PlainTextComponentSerializer.plainText().serialize(translated(component, locale));
     }
 
+    // Andromeda start - Port PaperMC/Paper#8344
+    public static String translateJsonTag(final String json, final Locale locale) {
+        if (json.contains("translate"))
+            return asJsonString(GsonComponentSerializer.gson().deserialize(json), locale);
+        return null;
+    }
+    // Andromeda end
+
     private static Component translated(final Component component, final Locale locale) {
         return GlobalTranslator.render(
             component,
diff --git a/src/main/java/net/minecraft/advancements/DisplayInfo.java b/src/main/java/net/minecraft/advancements/DisplayInfo.java
index 7909ba26bb7a883c74eda1ffd2d3e2bad286bc8b..232f4546ac4af35c4f4b5c10a63578e0ee2263a2 100644
--- a/src/main/java/net/minecraft/advancements/DisplayInfo.java
+++ b/src/main/java/net/minecraft/advancements/DisplayInfo.java
@@ -129,7 +129,7 @@ public class DisplayInfo {
     public void serializeToNetwork(FriendlyByteBuf buf) {
         buf.writeComponent(this.title);
         buf.writeComponent(this.description);
-        buf.writeItem(this.icon);
+        buf.writeItem(this.icon, true); // Andromeda - Port PaperMC/Paper#8344
         buf.writeEnum(this.frame);
         int i = 0;
         if (this.background != null) {
diff --git a/src/main/java/net/minecraft/network/FriendlyByteBuf.java b/src/main/java/net/minecraft/network/FriendlyByteBuf.java
index 92b30af59cc2e26b0a86721c3cdd88ba3d7b1b97..f44bd7ad773df9f82313cc9350235745e26ef555 100644
--- a/src/main/java/net/minecraft/network/FriendlyByteBuf.java
+++ b/src/main/java/net/minecraft/network/FriendlyByteBuf.java
@@ -657,6 +657,12 @@ public class FriendlyByteBuf extends ByteBuf {
     }
 
     public FriendlyByteBuf writeItem(ItemStack stack) {
+        // Andromeda start - Port PaperMC/Paper#8344
+        return writeItem(stack, false);
+    }
+
+    public FriendlyByteBuf writeItem(ItemStack stack, boolean skipTranslation) {
+        // Andromeda end
         if (stack.isEmpty() || stack.getItem() == null) { // CraftBukkit - NPE fix itemstack.getItem()
             this.writeBoolean(false);
         } else {
@@ -694,6 +700,54 @@ public class FriendlyByteBuf extends ByteBuf {
         return this;
     }
 
+    // Andromeda start - Port PaperMC/Paper#8344
+    public void handleWriteTranslation(CompoundTag tag) {
+        if (tag == null || tag.isEmpty()) return;
+
+        CompoundTag display = tag.getCompound("display");
+        if (display.isEmpty()) return;
+
+        CompoundTag clonedDisplay = null;
+        String name = display.getString("Name");
+
+        if (!name.isEmpty()) {
+            String translatedName = PaperAdventure.translateJsonTag(name, adventure$locale);
+
+            if (translatedName != null) {
+                if (clonedDisplay == null) clonedDisplay = display.copy();
+                display.putString("Name", translatedName);
+            }
+        }
+
+        net.minecraft.nbt.ListTag lore = display.getList("Lore", org.bukkit.craftbukkit.util.CraftMagicNumbers.NBT.TAG_STRING);
+        int size = lore.size();
+
+        for (int i = 0; i < size; i++) {
+            String line = lore.getString(i);
+            String translatedLine = PaperAdventure.translateJsonTag(line, adventure$locale);
+
+            if (translatedLine != null) {
+                if (clonedDisplay == null) clonedDisplay = display.copy();
+                lore.set(i, net.minecraft.nbt.StringTag.valueOf(translatedLine));
+            }
+        }
+
+        if (clonedDisplay != null) display.put("original", clonedDisplay);
+    }
+
+    private CompoundTag handleReadTranslation(CompoundTag tag) {
+        if (tag == null || tag.isEmpty()) return tag;
+
+        CompoundTag display = tag.getCompound("display");
+        if (display.isEmpty()) return tag;
+
+        CompoundTag original = display.getCompound("original");
+        if (!original.isEmpty()) tag.put("display", original);
+
+        return tag;
+    }
+    // Andromeda end
+
     public ItemStack readItem() {
         if (!this.readBoolean()) {
             return ItemStack.EMPTY;
@@ -702,7 +756,7 @@ public class FriendlyByteBuf extends ByteBuf {
             byte b0 = this.readByte();
             ItemStack itemstack = new ItemStack(item, b0);
 
-            itemstack.setTag(this.readNbt());
+            itemstack.setTag(handleReadTranslation(this.readNbt())); // Andromeda - Port PaperMC/Paper#8344
             // CraftBukkit start
             if (false && itemstack.getTag() != null) { // Paper - This is no longer needed with raw NBT being handled in metadata
                 CraftItemStack.setItemMeta(itemstack, CraftItemStack.getItemMeta(itemstack));
diff --git a/src/main/java/net/minecraft/network/syncher/EntityDataSerializers.java b/src/main/java/net/minecraft/network/syncher/EntityDataSerializers.java
index c5e82ec453a431486a9aed1d6c2637e8b335d0d6..240bda992b701c75fc76a6c5ce1a6a0d0f4f6498 100644
--- a/src/main/java/net/minecraft/network/syncher/EntityDataSerializers.java
+++ b/src/main/java/net/minecraft/network/syncher/EntityDataSerializers.java
@@ -39,7 +39,7 @@ public class EntityDataSerializers {
     public static final EntityDataSerializer<ItemStack> ITEM_STACK = new EntityDataSerializer<ItemStack>() {
         @Override
         public void write(FriendlyByteBuf buf, ItemStack value) {
-            buf.writeItem(net.minecraft.world.entity.LivingEntity.sanitizeItemStack(value, false)); // Paper - prevent oversized data
+            buf.writeItem(net.minecraft.world.entity.LivingEntity.sanitizeItemStack(value, false), true); // Paper - prevent oversized data // Andromeda - Port PaperMC/Paper#8344
         }
 
         @Override
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index f558998f83462e9c9846ae1d2e0dafbe3af61531..3c37a656f63db811deb84fb31c2971b9668dace9 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -2041,12 +2041,12 @@ public class ServerPlayer extends Player {
             PlayerLocaleChangeEvent event = new PlayerLocaleChangeEvent(this.getBukkitEntity(), packet.language);
             this.server.server.getPluginManager().callEvent(event);
             this.server.server.getPluginManager().callEvent(new com.destroystokyo.paper.event.player.PlayerLocaleChangeEvent(this.getBukkitEntity(), this.locale, packet.language)); // Paper
+            // Andromeda start - Port PaperMC/Paper#8344
+            this.locale = packet.language;
+            this.adventure$locale = net.kyori.adventure.translation.Translator.parseLocale(this.locale);
+            this.connection.connection.channel.attr(PaperAdventure.LOCALE_ATTRIBUTE).set(this.adventure$locale);
+            // Andromeda end
         }
-        this.locale = packet.language;
-        // Paper start
-        this.adventure$locale = net.kyori.adventure.translation.Translator.parseLocale(this.locale);
-        this.connection.connection.channel.attr(PaperAdventure.LOCALE_ATTRIBUTE).set(this.adventure$locale);
-        // Paper end
         this.clientViewDistance = packet.viewDistance;
         // CraftBukkit end
         this.chatVisibility = packet.chatVisibility();
