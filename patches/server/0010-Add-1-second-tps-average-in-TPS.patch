From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <alphakr93@outlook.com>
Date: Thu, 22 Dec 2022 20:57:50 +0900
Subject: [PATCH] Add 1 second tps average in TPS


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 435bcc1c6caabae2393e89115fb7ba48ecfe061d..2890c65e8a4d4026045627855caf6ab4ead48568 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -302,7 +302,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
     public static final int TPS = 20;
     public static final int TICK_TIME = 1000000000 / MinecraftServer.TPS;
     private static final int SAMPLE_INTERVAL = 20; // Paper
-    public final double[] recentTps = new double[ 4 ]; // Purpur
+    public final double[] recentTps = new double[ 5 ]; // Purpur // Andromeda
     // Spigot end
     public final io.papermc.paper.configuration.PaperConfigurations paperConfigurations;
     public final team.earendel.andromeda.configurations.AndromedaConfigurations andromedaConfigurations;
@@ -1063,6 +1063,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
     private static final long MAX_CATCHUP_BUFFER = TICK_TIME * TPS * 60L;
     private long lastTick = 0;
     private long catchupTime = 0;
+    public final RollingAverage tps1s = new RollingAverage(1); // Andromeda
     public final RollingAverage tps5s = new RollingAverage(5); // Purpur
     public final RollingAverage tps1 = new RollingAverage(60);
     public final RollingAverage tps5 = new RollingAverage(60 * 5);
@@ -1166,19 +1167,23 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 {
                     final long diff = curTime - tickSection;
                     java.math.BigDecimal currentTps = TPS_BASE.divide(new java.math.BigDecimal(diff), 30, java.math.RoundingMode.HALF_UP);
-                        tps5s.add(currentTps, diff); // Purpur
+                    tps1s.add(currentTps, diff); // Andromeda
+                    tps5s.add(currentTps, diff); // Purpur // Andromeda
                     tps1.add(currentTps, diff);
                     tps5.add(currentTps, diff);
                     tps15.add(currentTps, diff);
                     // Backwards compat with bad plugins
-                        // Purpur start
-                        this.recentTps[0] = tps5s.getAverage();
-                        this.recentTps[1] = tps1.getAverage();
-                        this.recentTps[2] = tps5.getAverage();
-                        this.recentTps[3] = tps15.getAverage();
-                        // Purpur end
+                    // Andromeda start
+                    // Purpur start
+                    this.recentTps[0] = tps1s.getAverage();
+                    this.recentTps[1] = tps5s.getAverage();
+                    this.recentTps[2] = tps1.getAverage();
+                    this.recentTps[3] = tps5.getAverage();
+                    this.recentTps[4] = tps15.getAverage();
+                    // Purpur end
+                    // Andromeda end
                     // Paper end
-                        lagging = recentTps[0] < org.purpurmc.purpur.PurpurConfig.laggingThreshold; // Purpur
+                    lagging = recentTps[0] < org.purpurmc.purpur.PurpurConfig.laggingThreshold; // Purpur // Andromeda
                     tickSection = curTime;
                 }
                 // Spigot end
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 94e63c1b741bc9718d3e473b729ea5824698f6bf..f3239dbf19a2e4bfedc4e240212738fc82bc5a8a 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -2772,6 +2772,7 @@ public final class CraftServer implements Server {
     @Override
     public double[] getTPS() {
         return new double[] {
+                net.minecraft.server.MinecraftServer.getServer().tps1s.getAverage(), // Andromeda
                 net.minecraft.server.MinecraftServer.getServer().tps5s.getAverage(), // Purpur
                 net.minecraft.server.MinecraftServer.getServer().tps1.getAverage(),
                 net.minecraft.server.MinecraftServer.getServer().tps5.getAverage(),
diff --git a/src/main/java/org/spigotmc/TicksPerSecondCommand.java b/src/main/java/org/spigotmc/TicksPerSecondCommand.java
index 088239d17aa8178cf8af09ec23cfd4deaaf2bbb6..512efa541b1645387fe7d6ba312c8fe2d4e8d810 100644
--- a/src/main/java/org/spigotmc/TicksPerSecondCommand.java
+++ b/src/main/java/org/spigotmc/TicksPerSecondCommand.java
@@ -31,7 +31,7 @@ public class TicksPerSecondCommand extends Command
         for ( int i = 0; i < tps.length; i++) {
             tpsAvg[i] = TicksPerSecondCommand.format( tps[i] );
         }
-        sender.sendMessage(ChatColor.GOLD + "TPS from last 5s, 1m, 5m, 15m: " + org.apache.commons.lang.StringUtils.join(tpsAvg, ", ")); // Purpur
+        sender.sendMessage(ChatColor.GOLD + "TPS from last 1s, 5s, 1m, 5m, 15m: " + org.apache.commons.lang.StringUtils.join(tpsAvg, ", ")); // Purpur // Andromeda
         if (args.length > 0 && args[0].equals("mem") && sender.hasPermission("bukkit.command.tpsmemory")) {
             sender.sendMessage(ChatColor.GOLD + "Current Memory Usage: " + ChatColor.GREEN + ((Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / (1024 * 1024)) + "/" + (Runtime.getRuntime().totalMemory() / (1024 * 1024)) + " mb (Max: " + (Runtime.getRuntime().maxMemory() / (1024 * 1024)) + " mb)");
             if (!hasShownMemoryWarning) {
